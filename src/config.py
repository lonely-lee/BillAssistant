import os

# 配置文件
# 列定义
"""
账单列定义
来源：支付宝、微信、京东
交易时间：
交易类型：交通出行、餐饮美食、投资理财、生活开支、日用百货、文化休闲、鞋帽服饰、消费还款、其他
 - 交通出行：打车、公交、地铁、燃油、火车等
 - 餐饮美食：三餐、零食、聚餐
 - 投资理财：基金、股票，改行后续剔除，专门做一个投资表格
 - 生活日用：洗漱用品、护肤精华、厨卫用品、生活电器、超市购物、水电燃气费、电话费、宽带费、租房
 - 鞋帽服饰：衣服、鞋子、行李箱、背包、袜子
 - 文化休闲：书籍、游戏、博物馆
 - 数码电子：手机电脑游戏机、相机、镜头
 - 消费还款：花呗、招商信用卡、白条
 - 其他：
 - 待人工确认：
类型细化：预留后续精细化
交易对方：商家名称
商品：商品名称或说明
交易状态：交易成功、交易失败、待定
交易方式：花呗、信用卡、现金、其他
收/支：收入、支出、不计收支、待定
金额：

支付宝映射：
    0：新增来源支付宝
    1：0
    2：1
    3：待定
    4：2
    5：4
    6：8
    7：7
    8：5
    9：6
微信映射：
    0：新增来源微信
    1：0
    2：1
    3：待定
    4：2
    5：3
    6：7
    7：6
    8：4
    9：5

京东映射：
    0：新增来源京东
    1：0
    2：1
    3：待定
    4：2
    5：3
    6：7
    7：6
    8：4
    9：5
"""
BILL_COLUMNS = [
    '来源','交易时间', '交易类型', '类型细化', '交易对方', 
    '商品', '交易状态', '交易方式','收/支', '金额'
]


# 映射表
EXPENSE_MAPPING = {
    '收入': '收入',  
    '支出': '支出',  
    '不计收支': '不计收支', 
    '待定': '待定'
}

TRANSACTION_STATUS_MAPPING = {
    '交易成功': '交易成功',  
    '交易失败': '交易失败',
    '待定': '待定'  
}

# 默认值
DEFAULT_EXPENSE = '待定'
DEFAULT_TRANSACTION_STATUS = '待定'

# 文件路径配置
ROOT_DIR = os.path.dirname(os.path.abspath(__file__))
INIT_BILL_PATH = os.path.join(ROOT_DIR, "初始账单", "25年01月份")
OUTPUT_DIR = os.path.join(ROOT_DIR, "账单", "25年01月份整理")
SAVE_PATH = os.path.join(OUTPUT_DIR, "25_01_total_bill.xlsx")

# 格式定义
FORMAT_STR = '%Y-%m-%d %H:%M:%S'

# 统一交易状态
## 映射表
TRANSACTION_STATUS_MAP = {
    "支付成功": "交易成功",
    "已转账": "交易成功",
    "对方已收钱": "交易成功",
    "交易成功": "交易成功",
    "已存入零钱": "交易成功",
    "交易失败": "交易失败",
    "退款成功": "交易失败",
    "交易关闭": "交易失败"
}


# 交易类型统一化规则：目标类型 -> (原类型关键词列表, 商品说明关键词列表)
TRANSACTION_TYPE_MAP = {
    '交通出行': (
        ['交通', '出行', '公交', '地铁', '打车'],  # 原交易类型关键词
        ['出租车', '滴滴', '火车', '高铁', '飞机', '油费', '停车费', '过路费', '车票']  # 商品关键词
    ),
    '餐饮美食': (
        ['餐饮', '美食', '吃饭', '餐厅'],
        ['饭店', '火锅', '烧烤', '奶茶', '咖啡', '外卖', '食材', '快餐', '餐馆', '面包店']
    ),
    '投资理财': (
        ['理财', '投资', '基金', '股票', '存款'],
        ['利息', '债券', '证券', '理财通', '基金赎回', '股票交易']
    ),
    '生活开支': (
        ['生活', '水电', '房租', '物业'],
        ['水费', '电费', '燃气费', '物业费', '房租', '话费', '网费', '暖气费', '宽带']
    ),
    '日用百货': (
        ['日用', '百货', '超市', '便利店'],
        ['日用品', '洗护', '纸巾', '化妆品', '家居用品', '超市', '便利店']
    ),
    '文化休闲': (
        ['文化', '休闲', '娱乐', '旅游'],
        ['电影', 'KTV', '旅游', '景点', '书店', '演唱会', '健身房', '游乐园', '景区']
    ),
    '鞋帽服饰': (
        ['鞋帽', '服饰', '衣服', '服装'],
        ['鞋子', '帽子', '箱包', '服装店', '品牌服饰', '上衣', '裤子']
    ),
    '消费还款': (
        ['还款', '信贷', '分期'],
        ['信用卡', '还款', '贷款', '账单', '借款', '分期']
    ),
    '其他': (['其他', '未知'], [])  # 兜底
}

# 机器学习模型保存地址
MODEL_PATH = 'transaction_model.pkl'